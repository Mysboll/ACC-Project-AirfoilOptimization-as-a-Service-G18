- name: Configure application
  hosts: all
  become: true
  become_method: sudo
  vars:
      repository_url: 
      repository_path: 

  tasks:
    - name: Install packages
      apt: update_cache=yes name={{ item }} state=present
      with_items:
        - git
        - python3
        - python3-pip
        - ####rabbitmq-server MAYBE??###

    -name: Install packages with pip
    - pip3: 
        name: flask
        name: -U Celery

    - name: Clone repository
      git: repo='{{ repository_url }}' dest='{{ repository_path }}'

    - name: Install requirements
      pip: requirements='{{ repository_path }}/requirements.txt'

    - name: ensure python-software-properties is installed
      apt: pkg=python-software-properties state=installed

    - name: add rabbitmq official apt repository
      apt_repository: repo='deb http://www.rabbitmq.com/debian/ testing main' state=present

    - name: add trusted key
      apt_key: url=https://www.rabbitmq.com/rabbitmq-signing-key-public.asc state=present

    - name: install package
      apt: name={{ item }} update_cache=yes state=installed
      with_items:
        - rabbitmq-server

    - name: enable rabbitmq plugins
      rabbitmq_plugin: names=rabbitmq_management,rabbitmq_tracing,rabbitmq_federation state=enabled
      notify:
      - restart rabbitmq

    - name: add users
      rabbitmq_user: user={{item}} password=TOBECHANGED tags=administrator,{{item}} vhost=##CHANGETHIS### configure_priv=.* write_priv=.* read_priv=.* state=present
      with_items:
      - ##SETUSERS###

    - name: remove default guest user
      rabbitmq_user: user=guest state=absent

    - name: ensure vhost /test is present
      rabbitmq_vhost: name=/test state=present

    handlers:
    - name: restart rabbitmq
      service: name=rabbitmq-server state=restarted
        vars:
      rabbitmq_version: 3.0.2-1

